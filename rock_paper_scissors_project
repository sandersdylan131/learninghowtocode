#!/usr/bin/env python3

import random

"""This program plays a game of Rock, Paper, Scissors between two Players,
and reports both Player's scores each round."""

moves = ['rock', 'paper', 'scissors']

"""The Player class is the parent class for all of the Players
in this game"""


class Player:
    my_move = None
    their_move = None


    def learn(self, my_move, thier_move):
        self.my_move = my_move
        self.their_move = thier_move



class RandomPlayer(Player):
    def moves(self):
        return random.choice(self.moves)

class ReflectPlayer(Player):
    def move(self):
        if self.their_move == None:
            return random.choice(moves)
        else:
            return self.their_move


class CyclePlayer(Player):
    def move(self):
        if self.my_move == None:
            return random.choice(moves)
        elif self.my_move == moves[0]:
            return moves[1]
        elif self.my_move == moves[1]:
            return moves[2]
        else:
            return moves[0]

class HumanPlayer(Player):
    def move(self):
        while True:
            player_choice = input("Choose Rock, Paper, or Scissors")
            if player_choice.lower() in self.moves:
                return player_choice()
            elif player_choice.lower() == "exit":
                exit()
            else:
                return "i'm sorry, that's not a choice"


def beats(one, two):
    return ((one == 'rock' and two == 'scissors') or
            (one == 'scissors' and two == 'paper') or
            (one == 'paper' and two == 'rock'))


class Game:
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        self.count_tie = 0
        self.count_win = 0
        self.count_lose = 0

    def play_round(self):
        move1 = self.p1.move()
        move2 = self.p2.move()
        print(f"Player 1: {move1}  Player 2: {move2}")
        self.p1.learn(move1, move2)
        self.p2.learn(move2, move1)
        if beats(move1, move2) == True:
            self.p2.score += 1
            print("player 1 wins")
            print(f"player 1: {self.p1.score} player 2: {self.p2.score}")
        elif beats(move2, move1) == True:
            self.p2.score += 1
            print("player 2 wins")
            print(f"player 1: {self.p1.score} player 2: {self.p2.score}")
        else:
            print("It's a Tie!")
            print(f"player 1: {self.p1.score} player 2: {self.p2.score}")

    def play_game(self):
        print("Game start!")
        self.p1.score = 0
        self.p2.score = 0
        for round in range(3):
            print(f"Round {round+1}:")
            self.play_round()
            
        if self.p1.score > self.p2.score:
            print("And the winner is ........ Player 1!!")
        elif self.p1.score < self.p2.score:
            print("And the winner is ........ Player 2!!")
        else:
            print("Well There's no winners or losers this time.")

        print("Game over!")


if __name__ == '__main__':
    game = Game(Player(), Player())
    game.play_game()
